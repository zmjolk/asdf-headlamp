#!/usr/bin/env bash

set -e
set -o pipefail
# set -x

ASDF_INSTALL_TYPE=${ASDF_INSTALL_TYPE:-version}
[ -n "$ASDF_INSTALL_VERSION" ] || (echo >&2 'Missing ASDF_INSTALL_VERSION' && exit 1)
[ -n "$ASDF_INSTALL_PATH" ] || (echo >&2 'Missing ASDF_INSTALL_PATH' && exit 1)

install_plugin() {
	local install_type=$1
	local version=$2
	local install_path=$3
	local download_url="$(get_download_url $install_type $version)"
	local tmp_download_file=$(mktemp)

	local bin_install_path="$install_path/bin"
	mkdir -p "${bin_install_path}"

	echo "Downloading headlamp from $download_url"
	curl -L -s "$download_url" -o "$tmp_download_file"
	pushd $bin_install_path >/dev/null
	echo "Extracting headlamp files"
	tar zxf "$tmp_download_file" --strip-components=1 || exit 1
	sudo chmod 4755 "${bin_install_path}/chrome-sandbox"
	sudo chown root:root "${bin_install_path}/chrome-sandbox"
	popd >/dev/null
}

get_platform() {
	[ "Linux" = "$(uname)" ] && echo "linux" || echo "mac"
}

get_arch() {
	local arch=$(uname -m)
	case $arch in
	amd64 | x86_64)
		echo "x64"
		;;
	arm64 | aarch64)
		echo "arm64"
		;;
	arm)
		echo "arm"
		;;
	*)
		echo "i386"
		;;
	esac
}

get_download_url() {
	local install_type=$1
	local tag=$2
	local version=$2

	local platform=$(get_platform)
	local arch=$(get_arch)
	local extra=""

	if [[ "$tag" =~ ^[0-9] ]]; then
		tag="v${tag}"
	fi

	echo "https://github.com/kubernetes-sigs/headlamp/releases/download/${tag}/Headlamp-${version}-${platform}-${arch}.tar.gz"
}

install_plugin "$ASDF_INSTALL_TYPE" "$ASDF_INSTALL_VERSION" "$ASDF_INSTALL_PATH"
