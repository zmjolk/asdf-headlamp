#!/usr/bin/env bash

set -e
set -o pipefail
# set -x

ASDF_INSTALL_TYPE=${ASDF_INSTALL_TYPE:-version}
[ -n "$ASDF_INSTALL_VERSION" ] || (printf >&2 'Missing ASDF_INSTALL_VERSION\n' && exit 1)
[ -n "$ASDF_INSTALL_PATH" ] || (printf >&2 'Missing ASDF_INSTALL_PATH\n' && exit 1)

install_plugin() {
	local install_type=$1
	local version=$2
	local install_path=$3
	local download_url="$(get_download_url $install_type $version)"
	local platform=$(get_platform)
	local tmp_download_file=$(mktemp)

	local bin_install_path="$install_path/bin"
	mkdir -p "${bin_install_path}"

	printf "Downloading headlamp from $download_url\n"
	curl -L -s "$download_url" -o "$tmp_download_file"

    if [[ "$platform" == "linux" ]]; then
        printf "Extracting headlamp files\n"
        tar zxf "$tmp_download_file" --strip-components=1 || exit 1
        sudo chown root:root "${bin_install_path}/chrome-sandbox"
        sudo chmod 4755 "${bin_install_path}/chrome-sandbox"

    elif [[ "$platform" == "mac" ]]; then
		mount_path="/Volumes/headlamp"
        printf "Mounting DMG...\n"
        hdiutil attach "$tmp_download_file" -mountpoint "$mount_path" -nobrowse -quiet -noverify -noautoopen

		cp -R "${mount_path}/Headlamp.app" "$bin_install_path/"
		printf "Copied Headlamp.app to $bin_install_path\n"

		printf "Unmounting DMG...\n"
		hdiutil detach "$mount_path" -quiet

		# Create shim for shim
			cat <<-EOF > "${bin_install_path}/headlamp"
		#!/bin/bash
		open -n ./Headlamp.app
		EOF
		chmod +x "${bin_install_path}/headlamp"
	fi
}

get_platform() {
	[ "Linux" = "$(uname)" ] && printf "linux" || printf "mac"
}

get_arch() {
	local arch=$(uname -m)
	case $arch in
	amd64 | x86_64)
		printf "x64\n"
		;;
	arm64 | aarch64)
		printf "arm64\n"
		;;
	arm)
		printf "arm\n"
		;;
	*)
		printf "i386\n"
		;;
	esac
}

get_download_url() {
	local install_type=$1
	local tag=$2
	local version=$2

	local platform=$(get_platform)
	local arch=$(get_arch)

	if [[ "$platform" == "linux" ]]; then
		file_type="tar.gz"
	elif [[ "$platform" == "mac" ]]; then
		file_type="dmg"
	else
		printf >&2 "Unsupported platform: $platform\n"
		exit 1
	fi

	if [[ "$tag" =~ ^[0-9] ]]; then
		tag="v${tag}"
	fi

	printf "https://github.com/kubernetes-sigs/headlamp/releases/download/${tag}/Headlamp-${version}-${platform}-${arch}.${file_type}\n"
}

install_plugin "$ASDF_INSTALL_TYPE" "$ASDF_INSTALL_VERSION" "$ASDF_INSTALL_PATH"
